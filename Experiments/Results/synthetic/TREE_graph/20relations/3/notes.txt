Problem: Tree, 20R, Problem 3

Pred:
[(0, 6), (0, 19), (1, 5), (1, 13), (1, 19), (2, 4), (2, 7), (2, 15), (3, 6), (6, 10), (7, 14), (8, 9), (9, 18), (11, 12), (11, 16), (12, 14), (12, 17), (12, 18), (13, 15)]
Pred sel:
[3.720463143163281e-06, 1.3243134423824972e-06, 6.279069258671007e-08, 1.5946473763310025e-07, 1.4976662153030527e-07, 1.9700667556742325e-06, 1.597844966366402e-07, 1.666227896976877e-08, 2.523270929005592e-07, 1.8320724980299448e-05, 3.0420266909756805e-05, 1.2797738316938713e-08, 1.7530322661288577e-05, 2.640108923591663e-08, 1.8873888322062218e-07, 1.222563914782825e-06, 2.76699165708555e-08, 1.46686863126687e-07, 1.2139541431961075e-06]
Pred sel log:
[-5.0, -6.0, -7.0, -7.0, -7.0, -6.0, -7.0, -8.0, -7.0, -5.0, -5.0, -8.0, -5.0, -8.0, -7.0, -6.0, -8.0, -7.0, -6.0]


DPHyp Opt:

DPHyp LD order: [2, 15, 13, 1, 19, 0, 4, 7, 5, 14, 12, 17, 11, 18, 16]
DPHyp Part Tree 1: [8, 9]
Join [2, 15, 13, 1, 19, 0, 4, 7, 5, 14, 12, 17, 11, 18, 16, 8, 9]
DPHyp Part Tree 2: [6, 10], [3, 6, 10]
Join [2, 15, 13, 1, 19, 0, 4, 7, 5, 14, 12, 17, 11, 18, 16, 8, 9, 3, 6, 10]

--------------------------

- LD-Baum wird anfangs richtig erstellt
	- DA joint erst die 5, dann die 7
	- DA joint erst die 10, dann die 3, dann die 14, statt der 14
- Kosten explodieren sowohl bei DPHyp als auch bei DA, nachdem die 12 gejoined wird
	- DPHyp vorher: 18363, nachher: 2218903
	- DA vorher: 68998, nachher: 8337403
!- Unmittelbar vor der 12 wird bei DA die 3, 6 und 10 gejoined
	- bei DPHyp werden diese Relationen isoliert, und erst am Ende beigefügt
- 12 Predicates:
	- 11: 2.640108923591663e-08
	- 14: 1.222563914782825e-06
	- 17: 2.76699165708555e-08
	- 18: 1.46686863126687e-07
	-> Knotenpunkt


-------------------------
Bei max template depth = 3 ergibt sich folgendes Bild:
{0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 1: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 2: [], 3: [0, 1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], 4: [], 5: [3, 6, 10], 6: [], 7: [0, 1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19], 8: [], 9: [6, 10], 10: [], 11: [], 12: [], 13: [], 14: [], 15: [0, 1, 2, 4, 5, 7, 9, 11, 12, 13, 14, 15, 18, 19], 16: [0, 1, 2, 4, 5, 7, 9, 12, 13, 14, 15, 18, 19], 17: [0, 1, 2, 4, 5, 7, 12, 13, 14, 15, 18, 19], 18: [0, 1, 2, 4, 5, 7, 12, 13, 14, 15, 19], 19: [0, 1, 2, 4, 5, 7, 13, 14, 15, 19], 20: [0, 1, 2, 4, 5, 7, 13, 15, 19], 21: [0, 1, 2, 4, 5, 13, 15, 19], 22: [0, 1, 2, 5, 13, 15, 19], 23: [0, 1, 2, 13, 15, 19], 24: [1, 2, 13, 15, 19], 25: [1, 2, 13, 15], 26: [2, 13, 15], 27: [2, 15], 28: [], 29: []}
- Join 2 ist erstaunlicherweise empty, wobei Join 5 (Sub von Join 1) die Isolierung [3, 6, 10] vornimmt
- Möglicher Implementierungsfehler?

Bei max template depth = 2:
{0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 1: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 2: [], 3: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], 4: [], 5: [], 6: [], 7: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19], 8: [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 18, 19], 9: [0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 18, 19], 10: [0, 1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 15, 19], 11: [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 19], 12: [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 15, 19], 13: [0, 1, 2, 3, 4, 5, 6, 7, 13, 15, 19], 14: [0, 1, 2, 4, 5, 6, 7, 13, 15, 19], 15: [0, 1, 2, 4, 5, 7, 13, 15, 19], 16: [0, 1, 2, 4, 5, 13, 15, 19], 17: [0, 1, 2, 4, 13, 15, 19], 18: [0, 1, 2, 13, 15, 19], 19: [1, 2, 13, 15, 19], 20: [1, 2, 13, 15], 21: [2, 13, 15], 22: [2, 15]}
- Obwohl Join 2 als Ausweichmöglichkeit vorliegt, bleibt er konstant unbenutzt

-------------------------
Erfolgreiche Optimierung bei folgenden Parametereinstellungen:
- gs_penalty_auto_mode=1 (neu)
- quadratic approximation
- num decimal pos: 5
- template depth bound: 4
- DA time limit sec: 10
- penalty scaling: 4

- gs_penalty_auto_mode scheint entscheidend zu sein
	- konstant gute Ergebnisse mit, durchmischt ohne
